name: GCR Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: us-central1-docker.pkg.dev
  IMAGE_NAME: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}/personal.api

jobs:
  testing:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      PROJECTBUILDDIR: ./Tests/PersonalWebsiteBE.IntegrationTests/bin/Test/net6.0
    
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
    - uses: actions/checkout@v3

    - id: 'auth'
      name: "Authenticate Google Cloud"
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: ${{ secrets.GCP_TEST_CREDENTIALS }}

    - name: Configure Google Cloud
      uses: google-github-actions/setup-gcloud@v1

    - name: Token Replacement
      uses: receiptably/variable-substitution@v1
      with:
        files: '**/PersonalWebsiteBE.IntegrationTests/appsettings.Test.json'
      env:
        "GoogleCloud.Root": ${{ format('{0}-{1}', 'TEST', github.run_id) }}

    - name: Install dependencies
      run: dotnet restore ./Tests/PersonalWebsiteBE.IntegrationTests
    
    - name: Run tests
      run: dotnet test ./Tests/PersonalWebsiteBE.IntegrationTests --no-restore --collect:"XPlat Code Coverage" --configuration:"Test"

    - name: Generate Livingdoc
      run: |
        dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
        livingdoc test-assembly $PROJECTBUILDDIR/PersonalWebsiteBE.IntegrationTests.dll -t $PROJECTBUILDDIR/TestExecution.json -o ./Tests/PersonalWebsiteBE.IntegrationTests/Actions/pages/index.html

    - name: Generate Coverage Report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator -reports:"./Tests/PersonalWebsiteBE.IntegrationTests/TestResults/**/coverage.cobertura.xml" -targetdir:"./Tests/PersonalWebsiteBE.IntegrationTests/Actions/pages/coverage" -reporttypes:Html_Dark

    - name: Publish Test Results
      uses: actions/upload-artifact@v3
      with:
        name: Specflow Living Doc - ${{ github.run_id }}
        path: ./Tests/PersonalWebsiteBE.IntegrationTests/Actions/pages/index.html

    - name: Publish Coverage Results
      uses: actions/upload-artifact@v3
      with:
        name: Coverage Report - ${{ github.run_id }}
        path: ./Tests/PersonalWebsiteBE.IntegrationTests/Actions/pages/coverage

    - name: Push to Github Pages Branch
      run: |
        git config user.email "corbyn.greenwood.98@gmail.com"
        git config user.name "Corbyn Greenwood"
        git checkout --orphan gh-pages
        git --work-tree "./Tests/PersonalWebsiteBE.IntegrationTests/Actions/pages" add .
        git --work-tree "./Tests/PersonalWebsiteBE.IntegrationTests/Actions/pages" commit -m "gh-pages"
        git push origin HEAD:gh-pages --force
        git checkout -f main
        git branch -D gh-pages

  build:
    name: Build Docker Image
    needs: testing
    runs-on: ubuntu-latest
      
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: actions/checkout@v3

    - id: 'auth'
      name: "Authenticate Google Cloud"
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

    - name: Token replacement
      uses: receiptably/variable-substitution@v1
      with:
          files: '**/appsettings.json'
      env:
          "Sendgrid.ApiKey": ${{ secrets.SENDGRID_APIKEY }}
          "GoogleCloud.ProjectId": ${{ secrets.GCP_PROJECT_ID }}
          "GoogleCloud.DefaultStorageBucket": ${{ secrets.GCP_DEFAULT_STORAGE_BUCKET}}
          "GoogleCloud.DataLocation": ${{ secrets.GCP_DEFAULT_LOCATION }}
          "GoogleCloud.StorageClass": ${{ secrets.GCP_STORAGE_CLASS }}

    - name: Configure Google Cloud
      uses: google-github-actions/setup-gcloud@v1

    - name: Configure Docker
      run: gcloud auth configure-docker --quiet $REGISTRY

    - name: Build Docker image
      run: docker build -f ./Web/PersonalWebsiteBE/Dockerfile -t $IMAGE_NAME .

    - name: Push Docker image
      run: docker push $IMAGE_NAME

  deploy:
    name: Deploy Docker Image
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: actions/checkout@v3

    - id: 'auth'
      name: "Authenticate Google Cloud"
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

    - name: Configure Google Cloud
      uses: google-github-actions/setup-gcloud@v1

    - name: Deploy Docker image
      run: gcloud run deploy personal-website-api --image $IMAGE_NAME --region us-central1 --platform managed